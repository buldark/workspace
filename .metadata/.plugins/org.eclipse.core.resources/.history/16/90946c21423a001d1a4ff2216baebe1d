package class_;


class Person{
	private/*private : 데이터를 감추겠다-> 이럼 다른 클래스안에서는 다 에러가 나옴 */ String name;
	private int age ; //메뉴판을 작성한것과같은 상황
	
	public String getName(){
		return name ;
	}
	public int getAge() {
		return age;
	}
	public void getData(String n ,int a ) {
		name =n ;
		age = a;
	}
	public void setName(String n/*문자열을 받을 거니깐 String*/) {//구현부
		name =n;
	}
	public void setAge(int a) {
		age =a ;
	}
	public void setData(String n ,int a ) {
		name =n ;
		age = a;
	}
}//c-person






//---------------------------------------------
public class PersonMain {
//객체지향언어 쓰는 이유 1)중복 되는것을 피하기 위해서 cf) DB - aap 관점 지향
				// 2)결합성을 낮추기 위해서 


	public static void main(String[] args) {
	
//		int aa -> 실수형 변수
//		double aa ->실수형 변수
//		Person aa  -> 객체(클래스변수)
		Person aa;//객체
		aa =new Person();//메모리생성 
		System.out.println("객체 aa = "+aa); // syso(aa)는 데이터의 주소값을 출력 
		//name = "홍길동"; ->error//누구 안에 있는 이름을 말해줘야함 
		aa.setName ("홍길동");
		aa.setAge (25);
		
		System.out.println("이름은 "+aa.getName()+ "\t+ 나이는 " +aa.getAge());
		
		System.out.println();
		
		Person bb = new Person(); //각자 주인이 다르다일뿐 메뉴판은 하나임(메뉴판은 위에 class person 	
		System.out.println("객체 bb = "+bb);
		bb.setName("코난");
		bb.setAge(13);
		System.out.println("이름은 "+bb.getName()+ "\t+ 나이는 " +bb.getAge()); 
		//클래스(person)는  하나지만 음식은 여러개 가능(aa,bb)
		Person cc = new Person();
		cc.setData("둘리",100);
		
				}

}











